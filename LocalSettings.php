<?php
# This file was automatically generated by the MediaWiki 1.42.3
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/MainConfigSchema.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# https://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if (!defined('MEDIAWIKI')) {
    exit;
}

# Habilitar la visualización de todos los errores
error_reporting(E_ALL);
ini_set('display_errors', 1);


## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

/*Todo -> nom del web*/
$wgSitename = 'UX Wiki';
$wgMetaNamespace = 'UX_Wiki';
$wgFavicon = "http://localhost:8888/assets/favicon.ico";

/*TODO -> Habilitar sub pagines */
$wgNamespacesWithSubpages[NS_MAIN] = true; // Habilita subpáginas en el espacio principal
$wgNamespacesWithSubpages[NS_PROJECT] = true; // Habilita subpáginas en el espacio del proyecto
$wgNamespacesWithSubpages[NS_CATEGORY] = true; // Habilita subpáginas en Categorías
$wgNamespacesWithSubpages[500] = true; // Si creaste un namespace "Accesibilidad"

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs
## (like /w/index.php/Page_title to /wiki/Page_title) please see:
## https://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath = '';

## The protocol and server name to use in fully-qualified URLs
$wgServer = 'http://localhost:8888';

## The URL path to static resources (images, scripts, etc.)
$wgResourceBasePath = $wgScriptPath;

## The URL paths to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogos = [
    '1x' => "$wgResourceBasePath/resources/assets/change-your-logo.svg",
    'icon' => "$wgResourceBasePath/resources/assets/change-your-logo.svg",
];

## UPO means: this is also a user preference option

$wgEnableEmail = true;
$wgEnableUserEmail = true; # UPO

$wgEmergencyContact = '';
$wgPasswordSender = '';

$wgEnotifUserTalk = false; # UPO
$wgEnotifWatchlist = false; # UPO
$wgEmailAuthentication = true;

## Database settings
## Database settings
$wgDBtype = 'mysql';
$wgDBserver = 'localhost';
$wgDBport = 8889;         // Define el puerto aquí
$wgDBname = 'ux_wiki_db';
$wgDBuser = 'root';
$wgDBpassword = 'root';


# MySQL specific settings
$wgDBprefix = "";
$wgDBssl = false;

# MySQL table options to use during installation or update
$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

# Shared database table
# This has no effect unless $wgSharedDB is also set.
$wgSharedTables[] = "actor";

## Shared memory settings
$wgMainCacheType = CACHE_NONE;
$wgMemCachedServers = [];

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
#$wgUseImageMagick = true;
#$wgImageMagickConvertCommand = '/usr/bin/convert';

# InstantCommons allows wiki to use images from https://commons.wikimedia.org
$wgUseInstantCommons = false;

# Periodically send a pingback to https://www.mediawiki.org/ with basic data
# about this MediaWiki instance. The Wikimedia Foundation shares this data
# with MediaWiki developers to help guide future development efforts.
$wgPingback = true;

# Site language code, should be one of the list in ./includes/languages/data/Names.php
$wgLanguageCode = 'es';

# Time zone
$wgLocaltimezone = 'UTC';

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publicly accessible from the web.
#$wgCacheDirectory = "$IP/cache";

$wgSecretKey = '75c24f4388a301b2b7271296b2189b7be2916a5d68d48c7463af9b3192f21626';

# Changing this will log out all existing sessions.
$wgAuthenticationTokenVersion = '1';

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = '9287ffbaf6bf8520';

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = 'https://creativecommons.org/licenses/by/4.0/';
$wgRightsText = 'Creative Commons Atribución';
$wgRightsIcon = "$wgResourceBasePath/resources/assets/licenses/cc-by.png";

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = '';

# The following permissions were set based on your choice in the installer
$wgGroupPermissions['*']['createaccount'] = false;
$wgGroupPermissions['*']['edit'] = false;


/* TODO: PERMISOS SEGONS USUARIS */

$wgApprovedRevsShowApprovedVersionsOnly = true;

// Configurar permisos por grupo
$wgGroupPermissions['alumnos']['read'] = true;  // Alumnos solo leen páginas aprobadas.
$wgGroupPermissions['alumnos']['viewlinktolatest'] = false; // Ocultar enlace a versiones más recientes para alumnos.

$wgGroupPermissions['profesores']['read'] = true;  // Profesores pueden leer todo, incluso no aprobado.
$wgGroupPermissions['profesores']['approverevisions'] = true;  // Profesores pueden aprobar revisiones.
$wgGroupPermissions['profesores']['viewlinktolatest'] = true; // Profesores ven todas las revisiones.

## Default skin: you can change the default skin. Use the internal symbolic
## names, e.g. 'vector' or 'monobook':
$wgDefaultSkin = 'timeless';

# Enabled skins.
# The following skins were automatically enabled:
wfLoadSkin('MinervaNeue');
wfLoadSkin('Timeless');


# Enabled extensions. Most of the extensions are enabled by adding
# wfLoadExtension( 'ExtensionName' );
# to LocalSettings.php. Check specific extension documentation for more details.
# The following extensions were automatically enabled:
wfLoadExtension('CodeEditor');
wfLoadExtension('VisualEditor');
wfLoadExtension('WikiEditor');
wfLoadExtension(ext: 'ParserFunctions');
#wfLoadExtension( 'Comments' );

/* TODO: AFEGIR EXTENSIONS PER OCULTAR ARTICLES SENSE REVISAR, I PER A QUE ELS PROFES PUGUIN EVALUAR ARTICLES */
#wfLoadExtension( 'FlaggedRevs' );
#wfLoadExtension( 'PageAssessments' );
wfLoadExtension(ext: 'ApprovedRevs');
wfLoadExtension('InputBox');
/*TODO-> Afegir extensio x llista pagines al inici */
wfLoadExtension('CategoryTree');
$wgCategoryTreeDynamicTag = true;
$wgCategoryTreeAllowTag = true;
$wgCategoryTreeMaxChildren = 200;

$wgEnableUploads = true;  // Habilita la subida de archivos
$wgFileExtensions = [ 'png', 'gif', 'jpg', 'jpeg', 'webp' ];
$wgStrictFileExtensions = false;

$wgAllowCopyUploads = true;


/*TODO afegir discusions a la pagina */
$wgGroupPermissions['alumnos']['edit'] = true;  // Permitir editar
$wgGroupPermissions['profesores']['edit'] = true; // Permitir edición
$wgGroupPermissions['alumnos']['createtalk'] = true;  // Permitir crear páginas de discusión
$wgApprovedRevsAutomaticApprovals = false;  // Desactiva aprobaciones automáticas.
$wgGroupPermissions['profesores']['approverevisions'] = true; // Permitir que los profesores aprueben revisiones.
$wgApprovedRevsShowApprovedVersionsOnly = true; // Solo muestra versiones aprobadas al público.
$wgGroupPermissions['*']['createaccount'] = true; // Los usuarios anónimos aún pueden registrarse

/*TODO configuració extensio comments */
$wgCommentsPageProtection = false; // Permitir comentarios en todas las páginas
$wgCommentsRequireLogin = false;  // Permitir a usuarios no registrados comentar
$wgCommentsEnableAutoSign = true; // Firmar automáticamente los comentarios                      // Permitir que cargue el JavaScript necesario
$wgGroupPermissions['*']['comment'] = true; // Permitir comentarios para usuarios no registrados
$wgGroupPermissions['user']['comment'] = true; // Permitir comentarios para usuarios registrados
# End of automatically generated settings.
# Add more configuration options below.

$wgShowExceptionDetails = true;

$wgRawHtml = true;

/*TODO: Gestio de articles */
/**Els articles, de manera estandard, es posen ocults */
/**Llavors, els profesors son els que els revisen i publiquen oks */


/*TODO: Usuaris anonims no poden veure ni fer res */
/*
$wgGroupPermissions['*']['read'] = false;  // Los usuarios no autenticados no pueden leer páginas
$wgGroupPermissions['*']['edit'] = false; // Los usuarios no autenticados no pueden editar
*/

/*TODO: Pagina principal -> donar llistat de pagines aprobades*/
/*
use MediaWiki\MediaWikiServices;

$wgHooks['SkinAfterContent'][] = function ( &$content, $skin ) {
    // Registrar un mensaje de depuración
    error_log("fins aqui ok");

    $currentTitle = $skin->getTitle()->getPrefixedText();
    error_log("Título actual: " . $currentTitle);

    // Solo ejecutar si estamos en la página principal
    if ( $currentTitle === 'Página principal' ) {
        error_log("Estamos en la página principal.");

        // Usar MediaWikiServices para obtener la conexión a la base de datos
        $dbr = MediaWikiServices::getInstance()->getDBLoadBalancer()->getConnectionRef( DB_REPLICA );

        // Realizar la consulta a la base de datos
        $res = $dbr->select(
            ['approved_revs', 'page'],
            ['page.page_id', 'page.page_title', 'page.page_namespace', 'approved_revs.rev_id AS approved_revision'],
            ['approved_revs.page_id = page.page_id'], // Condición de la consulta
            __METHOD__,
            [],
            ['page' => ['INNER JOIN', 'approved_revs.page_id = page.page_id']]
        );

        // Generar HTML para mostrar la lista de páginas aprobadas
        $output = "<h2>Páginas Aprobadas</h2><ul>";
        foreach ( $res as $row ) {
            $title = Title::newFromText( $row->page_title, $row->page_namespace );
            if ( $title ) {
                error_log("Página aprobada encontrada: " . $title->getText());
                $output .= "<li><a href=\"" . htmlspecialchars( $title->getFullURL() ) . "\">" . htmlspecialchars( $title->getText() ) . "</a></li>";
            }
        }
        $output .= "</ul>";

        // Añadir el HTML generado al contenido de la página principal
        $content .= $output;

        error_log("Lista de páginas aprobadas generada.");
    }
    return true;
};
*/

/*TODO: Els alumnes NO podenn veure pagines que no han estat aprovades */
/*
$wgHooks['BeforePageDisplay'][] = function ( OutputPage &$out, Skin $skin ) {
    // Registrar en el log para depuración
    error_log("***ENTRA AL SCRIPT BeforePageDisplay***");

    // Obtener el usuario y el título de la página actual
    $user = $out->getUser();
    $title = $out->getTitle();
    error_log("TITLE:: " . $title);

    //Si no estic a la pagina principal... comprova si esta no aprobada!
    //Sino fem aixo, com la principal es no aprobada, mostra que no esta disponible!!
    if(strcmp($title,"Página principal") != 0 ){

    $out->addInlineScript( script: "alert('entrat');" );

    // Verificar si el usuario pertenece al grupo 'alumnos'
    $userGroupManager = MediaWikiServices::getInstance()->getUserGroupManager();
    $groups = $userGroupManager->getUserGroups( $user );

    if ( in_array( 'alumnos', $groups ) ) { // Verificar el grupo usando UserGroupManager
        // Usar MediaWikiServices para obtener la conexión a la base de datos
        $dbr = MediaWikiServices::getInstance()->getDBLoadBalancer()->getConnectionRef( DB_REPLICA );

        // Comprobar si la página tiene una revisión aprobada
        $approvedRev = $dbr->selectField(
            'approved_revs',
            'rev_id',
            [ 'page_id' => $title->getArticleID() ],
            __METHOD__
        );

        // Si no tiene revisión aprobada, redirigir o mostrar un mensaje
        if ( !$approvedRev ) {
            $out->addInlineScript( script: "alert('Pagina no aprobada!');" );

            $out->clearHTML(); // Limpia el contenido existente
            $out->setPageTitle( 'Revisión no aprobada.' );

            $out->addHTML('<b>Esta página aún no ha sido revisada y aprobada</b>. Debes esperar a que un profesor apruebe la revisión');

            // Añadir CSS en línea
            $out->addInlineStyle( "
                body {
                    background-color: #ff5d33;
                }
                h1 {
                    color: #333;
                }
            " );
        }
    }

    // Continuar con el flujo normal
    }
    
    return true;
};
*/

